version: '3.8'

services:
  # AdGuard Home DNS Server
  adguard:
    image: adguard/adguardhome:v0.107.54
    container_name: adguard-home
    hostname: adguard-dns
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=128m
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "${ADGUARD_WEB_PORT:-3000}:3000/tcp"
      - "853:853/tcp"  # DNS-over-TLS
      - "853:853/udp"  # DNS-over-TLS
    volumes:
      - ./data/adguard/work:/opt/adguardhome/work:rw
      - ./data/adguard/conf:/opt/adguardhome/conf:rw
      - ./configs/adguard/AdGuardHome.yaml:/opt/adguardhome/conf/AdGuardHome.yaml:ro
    environment:
      - TZ=${TZ:-Australia/Sydney}
      - PUID=1000
      - PGID=1000
    networks:
      - adguard-net
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "monitoring.scrape=true"
      - "monitoring.port=3000"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: ${ADGUARD_MEMORY_LIMIT:-512m}
          cpus: '1.0'
        reservations:
          memory: 256m
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # AdGuard Exporter for Prometheus metrics
  adguard-exporter:
    image: ebrianne/adguard-exporter:latest
    container_name: adguard-exporter
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: true
    user: "1000:1000"
    ports:
      - "${ADGUARD_EXPORTER_PORT:-9617}:9617"
    environment:
      - ADGUARD_PROTOCOL=http
      - ADGUARD_HOSTNAME=adguard
      - ADGUARD_PORT=3000
      - ADGUARD_USERNAME=${ADGUARD_USERNAME:-admin}
      - ADGUARD_PASSWORD=${ADGUARD_PASSWORD}
      - INTERVAL=10s
      - LOG_LIMIT=10000
    networks:
      - adguard-net
    depends_on:
      - adguard
    labels:
      - "monitoring.scrape=true"
      - "monitoring.port=9617"
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "2"
    deploy:
      resources:
        limits:
          memory: 64m
          cpus: '0.1'

  # Prometheus monitoring
  prometheus:
    image: prom/prometheus:v2.55.1
    container_name: prometheus
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: true
    user: "1000:1000"
    tmpfs:
      - /tmp:noexec,nosuid,size=64m
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./configs/prometheus/rules:/etc/prometheus/rules:ro
      - ./data/prometheus:/prometheus:rw
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=10GB'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--log.level=info'
    networks:
      - adguard-net
    depends_on:
      - adguard-exporter
      - node-exporter
    labels:
      - "monitoring.scrape=true"
      - "monitoring.port=9090"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: ${PROMETHEUS_MEMORY_LIMIT:-1g}
          cpus: '1.0'
        reservations:
          memory: 512m
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana dashboard
  grafana:
    image: grafana/grafana-oss:11.3.0
    container_name: grafana
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: true
    user: "1000:1000"
    tmpfs:
      - /tmp:noexec,nosuid,size=128m
      - /var/lib/grafana/plugins:noexec,nosuid,size=64m
    ports:
      - "${GRAFANA_PORT:-3001}:3000"
    volumes:
      - ./data/grafana:/var/lib/grafana:rw
      - ./configs/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./configs/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_SECURITY_SECRET_KEY=${GRAFANA_SECRET_KEY:-change_this_secret}
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
      - GF_SERVER_DOMAIN=${STATIC_IP:-192.168.1.100}
      - GF_SERVER_ROOT_URL=http://${STATIC_IP:-192.168.1.100}:${GRAFANA_PORT:-3001}
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_SNAPSHOTS_EXTERNAL_ENABLED=false
      - GF_LOG_MODE=console
      - GF_LOG_LEVEL=info
      - TZ=${TZ:-Australia/Sydney}
    networks:
      - adguard-net
    depends_on:
      - prometheus
    labels:
      - "monitoring.scrape=true"
      - "monitoring.port=3000"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: ${GRAFANA_MEMORY_LIMIT:-256m}
          cpus: '0.5'
        reservations:
          memory: 128m
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:v1.8.2
    container_name: node-exporter
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: true
    user: "1000:1000"
    ports:
      - "${NODE_EXPORTER_PORT:-9100}:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.netdev.device-exclude=^(veth.*|docker.*|br-.*)'
      - '--collector.processes'
      - '--collector.systemd'
      - '--collector.textfile.directory=/var/lib/node_exporter/textfile_collector'
      - '--web.disable-exporter-metrics'
      - '--log.level=info'
    networks:
      - adguard-net
    labels:
      - "monitoring.scrape=true"
      - "monitoring.port=9100"
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "2"
    deploy:
      resources:
        limits:
          memory: 128m
          cpus: '0.2'

  # Alertmanager for alert routing
  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: true
    user: "1000:1000"
    tmpfs:
      - /tmp:noexec,nosuid,size=64m
    ports:
      - "9093:9093"
    volumes:
      - ./configs/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - ./data/alertmanager:/alertmanager:rw
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://${STATIC_IP:-192.168.1.100}:9093'
      - '--log.level=info'
    networks:
      - adguard-net
    depends_on:
      - prometheus
    labels:
      - "monitoring.scrape=true"
      - "monitoring.port=9093"
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "2"
    deploy:
      resources:
        limits:
          memory: 128m
          cpus: '0.2'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Watchtower for automatic container updates
  watchtower:
    image: containrrr/watchtower:1.7.1
    container_name: watchtower
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - WATCHTOWER_SCHEDULE=0 0 3 * * *  # 3 AM daily
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
      # Push notifications removed for simplicity
      - TZ=${TZ:-Australia/Sydney}
    networks:
      - adguard-net
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "2"
    deploy:
      resources:
        limits:
          memory: 64m
          cpus: '0.1'

networks:
  adguard-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
    driver_opts:
      com.docker.network.bridge.name: adguard-br
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"

volumes:
  adguard-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/adguard/data

  prometheus-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/monitoring/prometheus

  grafana-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/monitoring/grafana

  alertmanager-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/monitoring/alertmanager